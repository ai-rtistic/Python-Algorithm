# Greedy Algorithm 
# 거스름 돈

# 당신은 음식점의 계산을 도와주는 점원입니다. 
# 카운터에는 거스름돈으로 사용할 500원, 100원, 10원짜리 동전이 무한히 존재한다고 가정
# 손님에게 거슬러 주어야 할 돈이 N 원일 때, 거슬러 주어야 할 동전의 최소 개수를 구하라

# 단, 거슬러 줘야 할 돈 N 은 항상 10의 배수

# -------------------------------------------------------------
# 문제 해결 아이디어

# 최적의 해를 빠르게 구하기 위해서는 가장 큰 화폐 단위부터 돈을 거슬러 주면 됨

# ----------------------------------------------------------------
# 답안 예시
# ex. N 이 12060원 일때,

n = 1260
count = 0

# 큰 단위의 화폐부터 차례대로 확인
array = [500, 100, 50, 10]

for coin in array:
  count += n // coin # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
  n %= coin

print(count)

#------------------------------------------------------------------
# 정당성 분석

# 가장 큰 화폐 단위 부터 돈을 거슬러 주는 것이 최적의 해를 보장하는 이유?
# 가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수이므로 작은 단위의 동전들을 종합해 다른 해가 나올 수 없기 때문

